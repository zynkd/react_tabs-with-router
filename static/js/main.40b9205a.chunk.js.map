{"version":3,"sources":["components/Navigation.tsx","pages/Home.tsx","pages/NotFound.tsx","components/Tabs.tsx","pages/TabsPage.tsx","App.tsx","index.tsx"],"names":["Navigation","className","isActive","cn","to","Home","NotFound","Tabs","tabs","selectedTab","isSelected","tab","id","map","title","content","TabsPage","tabId","useParams","find","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gPAsCeA,EAnCI,kBACjB,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CACE,YAAaD,KAGjBE,GAAG,IAPL,kBAYA,cAAC,IAAD,CACEH,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CACE,YAAaD,KAGjBE,GAAG,QAPL,0BCpBOC,EAFF,kBAAM,oBAAIJ,UAAU,QAAd,wBCEJK,EAFE,kBAAM,oBAAIL,UAAU,QAAd,6BCSVM,EAAwB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACtCC,EAAa,SAACC,GAAD,OAAcA,EAAIC,KAAOH,GAE5C,OACE,mCACE,qBAAKR,UAAU,gBAAf,SACE,6BACGO,EAAKK,KAAI,SAACF,GAAD,OACR,oBAEE,UAAQ,MACRV,UAAWE,IAAG,CAAE,YAAaO,EAAWC,KAH1C,SAKE,cAAC,IAAD,CAAMP,GAAE,gBAAWO,EAAIC,IAAvB,SAA8BD,EAAIG,SAJ7BH,EAAIC,cCdjBJ,EAAc,CAClB,CAAEI,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,gBAwB3BC,EArBE,WACf,IAAQC,EAAUC,cAAVD,MAEFR,EAAcD,EAAKW,MAAK,SAACR,GAAD,OAASA,EAAIC,KAAOK,MAAU,KAE5D,OACE,qCACE,oBAAIhB,UAAU,QAAd,uBAEA,cAAC,EAAD,CACEO,KAAMA,EACNC,YAAaQ,IAGf,qBAAKhB,UAAU,QAAQ,UAAQ,aAA/B,UACc,OAAXQ,QAAW,IAAXA,OAAA,EAAAA,EAAaM,UAAW,4BChBpBK,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKnB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoB,KAAK,IAAIC,QAAS,cAAC,EAAD,MAEzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUlB,GAAG,IAAImB,SAAO,MAErD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,MAEzB,eAAC,IAAD,CAAOD,KAAK,QAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,oBCpB5CG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.40b9205a.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst Navigation = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => cn(\n            'navbar-item',\n            {\n              'is-active': isActive,\n            },\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => cn(\n            'navbar-item',\n            {\n              'is-active': isActive,\n            },\n          )}\n          to=\"/tabs\"\n        >\n          Tabs\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Navigation;\n","const Home = () => <h1 className=\"title\">Home page</h1>;\n\nexport default Home;\n","const NotFound = () => <h1 className=\"title\">Page not found</h1>;\n\nexport default NotFound;\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTab?: string;\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs, selectedTab }) => {\n  const isSelected = (tab: Tab) => tab.id === selectedTab;\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={cn({ 'is-active': isSelected(tab) })}\n            >\n              <Link to={`/tabs/${tab.id}`}>{tab.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\nimport { Tabs } from '../components/Tabs';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst TabsPage = () => {\n  const { tabId } = useParams<{ tabId: string }>();\n\n  const selectedTab = tabs.find((tab) => tab.id === tabId) || null;\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTab={tabId}\n      />\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content || 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n\nexport default TabsPage;\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport TabsPage from './pages/TabsPage';\n\nexport const App = () => (\n  <>\n    <Navigation />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"*\" element={<NotFound />} />\n\n          <Route path=\"/tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":tabId/*\" element={<TabsPage />} />\n          </Route>\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}